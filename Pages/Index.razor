@page "/"
@using BlazorBasics.Models
@using BlazorBasics.client
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>
<h3>Memories</h3>
@if (memories is null)
{
        <p>Loading....</p>
}
else
{
        <div class="mb-5"><button @onclick=goToMemories class="btn btn-primary">Add Memory</button></div>
        <table class="table table-striped table-bordered table-hover">
            <thead class="table-dark" >
                <th>Id</th>
                <th>Name</th>
                <th>Description</th>
                <th>Date</th>
                <th>Location</th>
                <th>Action</th>
            </thead>
            <tbody>
            @foreach (var memory in memories)
            {
                        <tr>
                            <td>@memory.Id</td>
                            <td>@memory.Name</td>
                            <td>@memory.Description</td>
                            <td>@memory.Date</td>
                            <td>@memory.Location</td>
                            <td>
                                        <button class="btn btn-danger" @onclick="()=>deleteMemory(memory.Id)">delete</button>
                                        <button class="btn btn-success" @onclick="()=>UpdateMemory(memory.Id)">update</button>
                                </td>
                        </tr>
            }
            </tbody>
        </table>
}

@code {
    private MemoriesModel[]? memories;

    protected override void OnInitialized()
    {
        memories = MemoryClient.GetMemories();
    }

    public void goToMemories()
    {
        NavigationManager.NavigateTo("/edit-memories");
    }

    public void deleteMemory(int memoryId)
    {
        MemoryClient.DeleteMemory(memoryId);
        memories = MemoryClient.GetMemories();
    }

    public void UpdateMemory(int memoryId)
    {
        NavigationManager.NavigateTo("/update-memories/" + memoryId);
        
    }



}
